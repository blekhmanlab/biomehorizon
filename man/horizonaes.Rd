% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BiomeHorizon.R
\name{horizonaes}
\alias{horizonaes}
\title{Add Custom Aesthetics to the Horizon Plot}
\usage{
horizonaes(
  title = NA,
  subtitle = NA,
  xlabel = NA,
  ylabel = NA,
  showColorLegend = TRUE,
  showLegendLabels = TRUE,
  legendPosition = "right",
  legendTitle = NA,
  showPlotLabels = TRUE,
  col.bands = NA,
  col.outline = "#CCCCCC",
  col.border = "#CCCCCC"
)
}
\arguments{
\item{title}{character. The text for the title.}

\item{subtitle}{character. The text for the subtitle, displayed below the title.}

\item{xlabel}{character. The text for the x-axis label. If \code{NA}, uses a
default label: "Sample" if data is not regularized, or "Day" if data is
adjusted to regular time intervals.}

\item{ylabel}{character. The text for the y-axis label.}

\item{showColorLegend}{logical. If \code{TRUE} (the default) the color scale
legend is drawn. Colors are displayed with the highest band on top and the
lowest band on the bottom. For horizontal legends, higher bands will appear
to the right and lower bands to the left.}

\item{showLegendLabels}{logical. If \code{TRUE} (the default), labels indicating
band number are shown on the color scale legend.}

\item{legendPosition}{character. Where should the color scale legend be
displayed? Possible values are "right" (the default), "left", "top", and
"bottom". For the latter two options, the legend will appear horizontal.}

\item{legendTitle}{character. The text for the title of the color scale
legend.}

\item{showPlotLabels}{logical. If \code{TRUE} (the default), labels for OTU
subplots are shown.}

\item{col.bands}{character vector of hexadecimal color codes giving the color
scale for horizon bands. Colors should be specified from the most negative
band to the most positive band. Must be the same length as \code{2*nbands}.
If \code{NA}, uses a default Red-Blue color gradient of a length determined
by \code{nbands} in \code{prepanel()}. In this palette, darker shades of
red indicate progressively more negative bands, while darker shades of blue
indicate increasingly positive bands.}

\item{col.outline}{character string specifying the hexadecimal color code for
the outline on top of the graph of each band. If \code{NULL}, the outline
will be removed. Defaults to light gray (#CCCCCC).}

\item{col.border}{character string specifying the hexadecimal color code for
panel borders. If \code{NULL}, panel borders will be removed. Defaults to
light gray (#CCCCCC).}
}
\value{
A list containing custom ggplot aesthetics to override default values
  on the horizon plot. This list can then be supplied to \code{horizonplot()}
  to apply the aesthetics.
}
\description{
Add additional aesthetics to the horizon plot object, returning them in the
form of a list of ggplot aesthetics to supply to \code{horizonplot()}.
}
\details{
Setting any aesthetic to \code{NA} will use the default value. For most
values, this means the aesthetic will be blank or not appear on the horizon
plot. Other values like xlabel will use their default text. If an aesthetic
is already in the horizon plot by default, and you want to remove it, you can
do so by setting the respective argument to \code{NULL}.

This function provides an easy way to add the most common aesthetics to the
horizon plot, but if you want to add other aesthetics not included in this
function, you can do so by appending them to the horizon plot object using
the \code{+} operator. e.g. to add a gray background in the plotting area:\cr
\code{horizonplot(prepanel(otusample, metadatasample, taxonomysample,
subj="subject_1")) + theme(panel.background = element_rect(fill="gray90"))}
}
\examples{
plist <- prepanel(otusample, metadatasample, taxonomysample, subj = "subject_2")

# By default, the function is called with no arguments to use default aesthetics
horizonplot(plist, horizonaes())

# Same plot as above
horizonplot(plist)

# Add a custom title, ylabel
horizonplot(plist, horizonaes(title = "Microbiome Horizon Plot", ylabel = "OTU ID"))

# Remove the default x-label
horizonplot(plist, xlabel = NULL)

# Use a different colorscale
library(RColorBrewer)
horizonplot(plist, horizonaes(col.bands = brewer.pal(8, "PiYG")))

# To add aesthetics not included in this function, append them to the
# horizon plot object. e.g. for a gray plotting area background:
horizonplot(plist) + theme(panel.background = element_rect(fill = "gray90"))

}
